-> Understanding Representational State Transfer(REST)
   - REST is an architectural style used for building loosely coupled web applicationsover the internet.
   - Restful is referred to web services that implement REST
   - It is simply a program that returns data from the database to the client in a format that it requests.
   - It is based on HTTP, it retrieves data through standard HTTP methods: Get,Put,Post,Delete
-> Resources/ Nouns vs Actions
-> Breaking down the definition of REST
   - What is Representation (Represntation of resource e.g. profuct/1)
   - What is State?Does it mean session state (state of a resource at a particular timem(e.g. cost of something maybe different at different time so cost is state of resource, its not session state)
   - What is transfer?
   
   - Understanding the definition put together
    So REST is the Transfer of the state of the representation of a resource. 

-> Set of Architectural Constraints
-> Introducing JSON in REST (light and easy to transfer { id:1 
                                                        Name:Milk
                                                        cost:30
                                                        }
-> Introducing HTTP protocol
To clearify what action do the server has to perform on the client request we use HTTP protocol
It has 4 verbs
- HTTP get -> when you send request with http get it knows that it has to get the data for the client
- HTTP put
- HTTP post -> to add resource on the server we used post
- HTTP delete -> in this case it knows that it has to delete particular resource on the server 

Need of Rest API
->Softwares are Huge and complex, so they place numerous demands on software architectures.
  We need seperated client and server. In rest we have separate client and server. And both the server and client
  can evolve sepaerately. This means rest allows you to built loosely coupled application. Client may work on angular
  and server might work on Reactjs. Client and server need not worry about each other technology so that both evolve 
  independently.
-> Rest is independent of platforms and languaes
-> Flexibility and scalability
-> Not constrained to one format. Can return (XML,JSON,etc)
-> Since built on top of HTTP, can take advantageof HTTP cache.
-> Easy to use
-> Discoverability

What is web?
Interconnected Networks

What is API?
Application programming Interface.It is used to connect systems working on different platforms

What is a web server? Why we need it?
Interprets the client request and prepares the response for the client. That software is called web server.
Ex. IIS

Why we need web API?
Because we have distributed nature of web applications.
Example I have an application which has maps and order portal. So I used google API
to use google maps service and amazon API to use order service. Now to communicate between distributed
web applications we need Web API.

Web API is a technolgy offered by microsoft to build REST API's.

SOAP
-> Another category of API exists called SOAP
What is SOAP?
-> Simple Object Access Protocol
-> Can be built using WCF (windows communication foundation)
-> Return XML
-> Web services are nothing but SOAP services.
(whenever somebody says web API it means REST api and whenever somebody days Web API it means Web Services)

Q) Which one is prefered, SOAP or REST? Why?
SOAP and REST categorize to different needs of different set of software applications.
->Rest is an architectural style
->SOAP is a protocol
(So no comparision b/w both)
